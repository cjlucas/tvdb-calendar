services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: tvdbcalendar
      POSTGRES_PASSWORD: tvdbcalendar
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tvdbcalendar"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    environment:
      RAILS_ENV: development
      DATABASE_HOST: postgres
      DATABASE_USERNAME: tvdbcalendar
      DATABASE_PASSWORD: tvdbcalendar
    volumes:
      - .:/rails
      - bundle_cache:/usr/local/bundle
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    stdin_open: true
    tty: true

  jobs:
    build:
      context: .
      dockerfile: Dockerfile.dev
    environment:
      RAILS_ENV: development
      DATABASE_HOST: postgres
      DATABASE_USERNAME: tvdbcalendar
      DATABASE_PASSWORD: tvdbcalendar
    volumes:
      - .:/rails
      - bundle_cache:/usr/local/bundle
    depends_on:
      postgres:
        condition: service_healthy
    command: ["./bin/jobs"]
    user: "1000:1000"

  # Observability Stack
  loki:
    image: grafana/loki:3.0.0
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/tmp/loki

  grafana:
    image: grafana/grafana:10.4.0
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./.observability/grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - ./.observability/grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ./.observability/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - loki

  vector:
    image: timberio/vector:0.38.0-alpine
    volumes:
      - ./.observability/vector/vector.toml:/etc/vector/vector.toml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - vector_data:/var/lib/vector
    depends_on:
      - loki
    environment:
      - VECTOR_CONFIG=/etc/vector/vector.toml

volumes:
  postgres_data:
  bundle_cache:
  loki_data:
  grafana_data:
  vector_data:
